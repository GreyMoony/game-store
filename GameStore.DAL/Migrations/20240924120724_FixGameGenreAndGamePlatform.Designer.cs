// <auto-generated />
using System;
using GameStore.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameStore.DAL.Migrations
{
    [DbContext(typeof(GameStoreContext))]
    [Migration("20240924120724_FixGameGenreAndGamePlatform")]
    partial class FixGameGenreAndGamePlatform
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GameStore.Domain.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GameStore.Domain.Entities.GameGenre", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("GameStore.Domain.Entities.GamePlatform", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.HasKey("GameId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatforms");
                });

            modelBuilder.Entity("GameStore.Domain.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ParentGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ParentGenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e09418e8-d5e9-49c0-9b6d-896217a4e4a2"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("7dd4f1d3-f92e-4f4a-bb36-424682663aef"),
                            Name = "RPG"
                        },
                        new
                        {
                            Id = new Guid("0fc97d07-bfe9-4ad2-be31-5d210956a31f"),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("ba11af97-586e-40a2-9715-cdab4de652dd"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("e9971717-02aa-4592-a59c-05d2e57cd2e7"),
                            Name = "RTS",
                            ParentGenreId = new Guid("e09418e8-d5e9-49c0-9b6d-896217a4e4a2")
                        },
                        new
                        {
                            Id = new Guid("918c1e22-f319-4c62-9099-9b97aa161608"),
                            Name = "TBS",
                            ParentGenreId = new Guid("e09418e8-d5e9-49c0-9b6d-896217a4e4a2")
                        },
                        new
                        {
                            Id = new Guid("495e095a-a191-4b71-b20f-33abfa30fc70"),
                            Name = "Races",
                            ParentGenreId = new Guid("0fc97d07-bfe9-4ad2-be31-5d210956a31f")
                        },
                        new
                        {
                            Id = new Guid("c5fb4ec1-d9f8-4a03-ac2b-dda7cf6976a5"),
                            Name = "Rally",
                            ParentGenreId = new Guid("495e095a-a191-4b71-b20f-33abfa30fc70")
                        },
                        new
                        {
                            Id = new Guid("1cb0629d-4eab-4146-b630-315524a41e76"),
                            Name = "Arcade",
                            ParentGenreId = new Guid("495e095a-a191-4b71-b20f-33abfa30fc70")
                        },
                        new
                        {
                            Id = new Guid("b36f94d1-c725-4468-b753-1eccf69a0eb8"),
                            Name = "Formula",
                            ParentGenreId = new Guid("495e095a-a191-4b71-b20f-33abfa30fc70")
                        },
                        new
                        {
                            Id = new Guid("a24bca53-0d1e-4ad7-a943-ae369e342439"),
                            Name = "Off-road",
                            ParentGenreId = new Guid("495e095a-a191-4b71-b20f-33abfa30fc70")
                        },
                        new
                        {
                            Id = new Guid("9f7b52dc-2c09-4e35-bce7-c8794013d3e1"),
                            Name = "FPS",
                            ParentGenreId = new Guid("ba11af97-586e-40a2-9715-cdab4de652dd")
                        },
                        new
                        {
                            Id = new Guid("d1b0e087-8736-45ef-944c-987a0649d7e6"),
                            Name = "TPS",
                            ParentGenreId = new Guid("ba11af97-586e-40a2-9715-cdab4de652dd")
                        },
                        new
                        {
                            Id = new Guid("d192a43c-324e-40dd-b251-46fad07c97c9"),
                            Name = "Adventure",
                            ParentGenreId = new Guid("ba11af97-586e-40a2-9715-cdab4de652dd")
                        },
                        new
                        {
                            Id = new Guid("65017b1f-7748-4bf0-a1e1-43a7d576cfce"),
                            Name = "Puzzle & Skill"
                        });
                });

            modelBuilder.Entity("GameStore.Domain.Entities.Platform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6f048bbd-ab80-4d78-a4a9-63dc838d2e12"),
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("d7ebd850-864d-4990-aa64-53e586cd6f10"),
                            Type = "Browser"
                        },
                        new
                        {
                            Id = new Guid("70c393e6-11dc-47da-b98d-5f67c858ecee"),
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = new Guid("ef29b863-2893-46bb-bd91-4019ab36b1b8"),
                            Type = "Console"
                        });
                });

            modelBuilder.Entity("GameStore.Domain.Entities.GameGenre", b =>
                {
                    b.HasOne("GameStore.Domain.Entities.Game", "Game")
                        .WithMany("GameGenres")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStore.Domain.Entities.Genre", "Genre")
                        .WithMany("GameGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("GameStore.Domain.Entities.GamePlatform", b =>
                {
                    b.HasOne("GameStore.Domain.Entities.Game", "Game")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStore.Domain.Entities.Platform", "Platform")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("GameStore.Domain.Entities.Genre", b =>
                {
                    b.HasOne("GameStore.Domain.Entities.Genre", "ParentGenre")
                        .WithMany("SubGenres")
                        .HasForeignKey("ParentGenreId");

                    b.Navigation("ParentGenre");
                });

            modelBuilder.Entity("GameStore.Domain.Entities.Game", b =>
                {
                    b.Navigation("GameGenres");

                    b.Navigation("GamePlatforms");
                });

            modelBuilder.Entity("GameStore.Domain.Entities.Genre", b =>
                {
                    b.Navigation("GameGenres");

                    b.Navigation("SubGenres");
                });

            modelBuilder.Entity("GameStore.Domain.Entities.Platform", b =>
                {
                    b.Navigation("GamePlatforms");
                });
#pragma warning restore 612, 618
        }
    }
}
